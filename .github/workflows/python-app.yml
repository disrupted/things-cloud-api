name: CI

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-version:
          - "3.12"

    steps:
      - uses: actions/checkout@v4

      - name: Install Poetry
        run: pipx install poetry

      - name: Configure Poetry virtualenv
        run: poetry config virtualenvs.in-project true

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
          cache: poetry

      - run: poetry env use ${{ matrix.python-version }}

      - name: Install dependencies
        run: poetry install --no-interaction

      - name: Lint flake8
        run: poetry run pre-commit run --hook-stage manual flake8 --all-files --show-diff-on-failure

      - name: Check black
        run: poetry run pre-commit run --hook-stage manual black --all-files --show-diff-on-failure

      - name: Check mypy
        run: poetry run pre-commit run --hook-stage manual mypy --all-files

      - name: Check syntax update
        run: poetry run pre-commit run --hook-stage manual pyupgrade --all-files

      - name: Test pytest
        run: poetry run pytest
